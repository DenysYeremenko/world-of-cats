{"version":3,"file":"static/js/998.8bdf24a1.chunk.js","mappings":"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","sources":["webpack://world-of-cats/./src/pages/BreedsView/BreedsView.module.scss?b4ca","pages/BreedsView/BreedsView.jsx","utils/breedsList.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"BreedsSection\":\"BreedsView_BreedsSection__r34Tr\",\"topWrap\":\"BreedsView_topWrap__rdMbU\",\"breedsForm\":\"BreedsView_breedsForm__-Hq4Y\",\"limitSelect\":\"BreedsView_limitSelect__alxFv\",\"breedsSelect\":\"BreedsView_breedsSelect__Fi307\",\"sortingButton\":\"BreedsView_sortingButton__ACVl-\",\"sortingButtonZ_A\":\"BreedsView_sortingButtonZ_A__HvfKD\",\"DESC\":\"BreedsView_DESC__zaFTF\",\"sortingButtonA_Z\":\"BreedsView_sortingButtonA_Z__QEvSy\",\"ASC\":\"BreedsView_ASC__UPAn6\",\"selectedBreedStyle\":\"BreedsView_selectedBreedStyle__4xrT3\"};","import styles from './BreedsView.module.scss';\nimport classNames from 'classnames';\nimport { CategoryTitle } from 'components/CategoryTitle/CategoryTitle';\nimport { BreedsGallery } from 'components/BreedsGallery/BreedsGallery';\nimport { useEffect, useMemo } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { breedsList } from 'utils/breedsList';\nimport { useGetBreedsQuery } from 'services/catApi';\n\nconst BreedsView = props => {\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = useMemo(() => Object.fromEntries([...searchParams]), [searchParams]);\n\n  const { data, isFetching } = useGetBreedsQuery(params, {\n    skip: !params.limit,\n  });\n\n  useEffect(() => {\n    !params.limit && setSearchParams({ page: 0, limit: 5, order: 'ASC' });\n  }, [setSearchParams, params]);\n\n  const handleBreedChange = e => {\n    navigate(`/category/breeds/${e.target.value}`, { replace: true });\n  };\n\n  const handleLimitChange = e => {\n    setSearchParams({\n      page: 0,\n      limit: Number(e.target.value),\n      order: params.order,\n    });\n  };\n\n  const handleOrderChange = e => {\n    e.target.className.includes('Z_A')\n      ? setSearchParams({\n          page: params.page,\n          limit: params.limit,\n          order: 'DESC',\n        })\n      : setSearchParams({\n          page: params.page,\n          limit: params.limit,\n          order: 'ASC',\n        });\n  };\n\n  return (\n    <section className={styles.BreedsSection}>\n      <div className={classNames(styles.topWrap)}>\n        <CategoryTitle categoryName='breeds' location={'/'} />\n        <form className={styles.breedsForm}>\n          <select\n            name='breeds'\n            id='breeds'\n            className={styles.breedsSelect}\n            onChange={handleBreedChange}\n          >\n            <option value=''>All breeds</option>\n            {breedsList.map((breed, index) => {\n              return (\n                <option value={breed.id} key={index}>\n                  {breed.name}\n                </option>\n              );\n            })}\n          </select>\n          <select\n            name='limitOfItems'\n            id='limitOfItems'\n            className={styles.limitSelect}\n            onChange={handleLimitChange}\n            value={params.limit}\n          >\n            <option value='5'>Limit: 5</option>\n            <option value='10'>Limit: 10</option>\n            <option value='15'>Limit: 15</option>\n            <option value='20'>Limit: 20</option>\n          </select>\n          <button\n            className={classNames(\n              styles.sortingButton,\n              styles.sortingButtonZ_A,\n              params.order === 'DESC' && styles[params.order],\n            )}\n            type='button'\n            onClick={handleOrderChange}\n          ></button>\n          <button\n            className={classNames(\n              styles.sortingButton,\n              styles.sortingButtonA_Z,\n              params.order === 'ASC' && styles[params.order],\n            )}\n            type='button'\n            onClick={handleOrderChange}\n          ></button>\n        </form>\n      </div>\n      <BreedsGallery data={data} isFetching={isFetching} />\n    </section>\n  );\n};\n\nexport default BreedsView;\n","export const breedsList = [\n  { id: 'abys', name: 'Abyssinian' },\n  { id: 'aege', name: 'Aegean' },\n  { id: 'abob', name: 'American Bobtail' },\n  { id: 'acur', name: 'American Curl' },\n  { id: 'asho', name: 'American Shorthair' },\n  { id: 'awir', name: 'American Wirehair' },\n  { id: 'amau', name: 'Arabian Mau' },\n  { id: 'amis', name: 'Australian Mist' },\n  { id: 'bali', name: 'Balinese' },\n  { id: 'bamb', name: 'Bambino' },\n  { id: 'beng', name: 'Bengal' },\n  { id: 'birm', name: 'Birman' },\n  { id: 'bomb', name: 'Bombay' },\n  { id: 'bslo', name: 'British Longhair' },\n  { id: 'bsho', name: 'British Shorthair' },\n  { id: 'bure', name: 'Burmese' },\n  { id: 'buri', name: 'Burmilla' },\n  { id: 'cspa', name: 'California Spangled' },\n  { id: 'ctif', name: 'Chantilly-Tiffany' },\n  { id: 'char', name: 'Chartreux' },\n  { id: 'chau', name: 'Chausie' },\n  { id: 'chee', name: 'Cheetoh' },\n  { id: 'csho', name: 'Colorpoint Shorthair' },\n  { id: 'crex', name: 'Cornish Rex' },\n  { id: 'cymr', name: 'Cymric' },\n  { id: 'cypr', name: 'Cyprus' },\n  { id: 'drex', name: 'Devon Rex' },\n  { id: 'dons', name: 'Donskoy' },\n  { id: 'lihu', name: 'Dragon Li' },\n  { id: 'emau', name: 'Egyptian Mau' },\n  { id: 'ebur', name: 'European Burmese' },\n  { id: 'esho', name: 'Exotic Shorthair' },\n  { id: 'hbro', name: 'Havana Brown' },\n  { id: 'hima', name: 'Himalayan' },\n  { id: 'jbob', name: 'Japanese Bobtail' },\n  { id: 'java', name: 'Javanese' },\n  { id: 'khao', name: 'Khao Manee' },\n  { id: 'kora', name: 'Korat' },\n  { id: 'kuri', name: 'Kurilian' },\n  { id: 'lape', name: 'LaPerm' },\n  { id: 'mcoo', name: 'Maine Coon' },\n  { id: 'mala', name: 'Malayan' },\n  { id: 'manx', name: 'Manx' },\n  { id: 'munc', name: 'Munchkin' },\n  { id: 'nebe', name: 'Nebelung' },\n  { id: 'norw', name: 'Norwegian Forest Cat' },\n  { id: 'ocic', name: 'Ocicat' },\n  { id: 'orie', name: 'Oriental' },\n  { id: 'pers', name: 'Persian' },\n  { id: 'pixi', name: 'Pixie-bob' },\n  { id: 'raga', name: 'Ragamuffin' },\n  { id: 'ragd', name: 'Ragdoll' },\n  { id: 'rblu', name: 'Russian Blue' },\n  { id: 'sava', name: 'Savannah' },\n  { id: 'sfol', name: 'Scottish Fold' },\n  { id: 'srex', name: 'Selkirk Rex' },\n  { id: 'siam', name: 'Siamese' },\n  { id: 'sibe', name: 'Siberian' },\n  { id: 'sing', name: 'Singapura' },\n  { id: 'snow', name: 'Snowshoe' },\n  { id: 'soma', name: 'Somali' },\n  { id: 'sphy', name: 'Sphynx' },\n  { id: 'tonk', name: 'Tonkinese' },\n  { id: 'toyg', name: 'Toyger' },\n  { id: 'tang', name: 'Turkish Angora' },\n  { id: 'tvan', name: 'Turkish Van' },\n  { id: 'ycho', name: 'York Chocolate' },\n];\n"],"names":["props","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","useGetBreedsQuery","skip","limit","data","isFetching","useEffect","page","order","handleOrderChange","e","target","className","includes","styles","BreedsSection","classNames","topWrap","CategoryTitle","categoryName","location","breedsForm","name","id","breedsSelect","onChange","value","replace","breedsList","map","breed","index","limitSelect","Number","sortingButton","sortingButtonZ_A","type","onClick","sortingButtonA_Z","BreedsGallery"],"sourceRoot":""}